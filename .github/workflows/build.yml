name: Build SmartStarter Jar

on:
  workflow_dispatch:
  push: { branches: ["main"] }

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - uses: gradle/actions/setup-gradle@v4

      # settings.gradle을 통째로 작성 (BOM/인코딩 이슈 회피)
      - name: Write settings.gradle
        shell: bash
        run: |
          cat > settings.gradle << 'EOF'
          pluginManagement {
            repositories {
              maven { url 'https://maven.fabricmc.net/' }
              gradlePluginPortal()
            }
          }
          dependencyResolutionManagement {
            repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
            repositories {
              mavenCentral()
              maven { url 'https://maven.fabricmc.net/' }
              maven { name 'Mojang'; url 'https://libraries.minecraft.net/' }
            }
          }
          rootProject.name = 'SmartStarter-1.21.6'
          EOF

      # build.gradle을 통째로 작성 (sed 안 씀)
      - name: Write build.gradle
        shell: bash
        run: |
          cat > build.gradle << 'EOF'
          plugins {
              id 'fabric-loom' version '1.10.5'
              id 'maven-publish'
          }
          group = 'net.smartmoving'
          version = '1.0.0'

          repositories {
              maven { name 'Mojang'; url 'https://libraries.minecraft.net/' }
              mavenCentral()
              maven { url = 'https://maven.fabricmc.net/' }
              maven { url = 'https://maven.minecraftforge.net' }
          }

          dependencies {
              minecraft "com.mojang:minecraft:1.21.6"
              mappings "net.fabricmc:yarn:1.21.6+build.1:v2"
              modImplementation "net.fabricmc:fabric-loader:0.16.14"
              modImplementation "net.fabricmc.fabric-api:fabric-api:0.127.1+1.21.6"
          }

          java {
              toolchain { languageVersion = JavaLanguageVersion.of(21) }
              withSourcesJar()
          }

          loom { splitEnvironmentSourceSets() }

          processResources {
              inputs.property "version", project.version
              filesMatching("fabric.mod.json") {
                  expand "version": project.version
              }
          }

          tasks.withType(JavaCompile).configureEach {
              options.encoding = "UTF-8"
              options.release = 21
          }

          jar {
              from("LICENSE") { rename { "LICENSE_\${project.name}" } }
          }
          EOF

      # Gradle Wrapper 생성
      - name: Generate Gradle Wrapper
        run: gradle wrapper

      # 빌드 + 재맵 JAR 생성 (배포용)
      - name: Build (remap)
        run: ./gradlew --refresh-dependencies build remapJar

      # 디버그용: 산출물 나열
      - name: List outputs
        run: ls -al build/libs || true

      # 아티팩트 업로드 (remapped JAR)
      - name: Upload Jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: SmartStarter-jar
          path: build/libs/*-remapped.jar
