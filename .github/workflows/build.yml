name: Build SmartStarter Jar

on:
  workflow_dispatch:
  push: { branches: ["main"] }

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - uses: gradle/actions/setup-gradle@v4

      # settings.gradle: 저장소는 여기서만 정의 (Loom 친화)
      - name: Write settings.gradle
        shell: bash
        run: |
          cat > settings.gradle << 'EOF'
          pluginManagement {
            repositories {
              maven { url 'https://maven.fabricmc.net/' }
              gradlePluginPortal()
            }
          }
          dependencyResolutionManagement {
            // Loom이 내부 repo를 추가할 수 있도록, settings 우선 + 프로젝트 허용
            repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
            repositories {
              mavenCentral()
              maven { url 'https://maven.fabricmc.net/' }
              maven { name 'Mojang'; url 'https://libraries.minecraft.net/' }
            }
          }
          rootProject.name = 'SmartStarter-1.21.6'
          EOF

      # build.gradle: Fabric API 제거(로더만), repositories는 settings에만
      - name: Write build.gradle
        shell: bash
        run: |
          cat > build.gradle << 'EOF'
          plugins {
              id 'fabric-loom' version '1.10.5'
              id 'maven-publish'
          }

          group = 'net.smartmoving'
          version = '1.0.0'

          dependencies {
              minecraft "com.mojang:minecraft:1.21.6"
              mappings "net.fabricmc:yarn:1.21.6+build.1:v2"
              modImplementation "net.fabricmc:fabric-loader:0.16.14"
              // Fabric API는 나중에 필요할 때만 추가
          }

          java {
              toolchain { languageVersion = JavaLanguageVersion.of(21) }
              withSourcesJar()
          }

          loom { splitEnvironmentSourceSets() }

          processResources {
              inputs.property "version", project.version
              filesMatching("fabric.mod.json") {
                  expand "version": project.version
              }
          }

          tasks.withType(JavaCompile).configureEach {
              options.encoding = "UTF-8"
              options.release = 21
          }

          jar {
              from("LICENSE") { rename { "LICENSE_\${project.name}" } }
          }
          EOF

      # Gradle Wrapper를 8.14.3으로 고정
      - name: Generate Gradle Wrapper (8.14.3)
        run: gradle wrapper --gradle-version 8.14.3

      # 빌드 + remapJar(배포용) 생성
      - name: Build (remap)
        run: ./gradlew --stacktrace --warning-mode all --refresh-dependencies build remapJar

      - name: List outputs
        run: ls -al build/libs || true

      # remapped JAR 업로드
      - name: Upload Jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: SmartStarter-jar
          path: build/libs/*-remapped.jar
